@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@using X.PagedList
@model IEnumerable<Item>

@{
    ViewData["Title"] = "Index";
    var paging = Html.PagedListPager(Model as IPagedList, page => Url.Action("Index", new { page }),
        new PagedListRenderOptions
        {
            UlElementClasses = new[] { "pagination", "justify-content-center" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" }
        });
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@paging

<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Obtained)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Image)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @(item.Description.Length > 39 ? $"{item.Description[..20]}..." : item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Obtained)
            </td>
            <td>
                <img src="@Html.DisplayFor(modelItem => item.Image)" class="w-50" alt=""/>
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
    }
    </tbody>
    <br/>
</table>

@paging