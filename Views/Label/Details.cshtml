@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@using Microsoft.AspNetCore.Identity
@using X.PagedList
@model Tuple<Label, IEnumerable<Item>>
@inject UserManager<ApplicationUser> UserManager


@{
    ViewData["Title"] = "Details";
    var user = await UserManager.GetUserAsync(User);

}

<h1>Details</h1>

<div>
    <h4>Label</h4>
    <hr/>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Item1.Display)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Item1.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Item1.Display)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Item1.Display)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Item1.Color)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Item1.Color)
        </dd>
    </dl>
</div>

<h4>Items with this label:</h4>

@Html.PagedListPager(Model.Item2 as IPagedList, page => Url.Action("Details", new { Model.Item1.Id, page }),
    new PagedListRenderOptions
    {
        UlElementClasses = new[] { "pagination", "justify-content-center" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" }
    })

<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Item2.First().Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Item2.First().Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Item2.First().Obtained)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Item2.First().Image)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Item2)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @(item.Description.Length > 39 ? $"{item.Description[..20]}..." : item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Obtained)
            </td>
            <td>
                @if (item.Image is not null)
                {
                    @if (item.Image.StartsWith("https"))
                    {
                        <dd class="col-sm-10">
                            <img src="@item.Image" class="img-fluid w-50" alt=""/>
                        </dd>
                    }
                    else
                    {
                        <dd class="col-sm-10">
                            <img src="~/@item.Image" class="img-fluid w-50" alt=""/>
                        </dd>
                    }
                }
                else
                {
                    <dd class="col-sm-10">
                        <img src="~/favicon.ico" class="w-10" alt=""/>
                    </dd>
                }
            </td>

            @if (user is { IsAdmin:true })
            {
                <td>
                    <a asp-controller="Item" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-controller="Item" asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-controller="Item" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            }
            else
            {
                <td>
                    <a asp-controller="Item" asp-action="Details" asp-route-id="@item.Id">Details</a>
                </td>
            }

        </tr>
    }
    </tbody>
    <br/>
</table>

@Html.PagedListPager(Model.Item2 as IPagedList, page => Url.Action("Details", new { Model.Item1.Id, page }),
    new PagedListRenderOptions
    {
        UlElementClasses = new[] { "pagination", "justify-content-center" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" }
    })

<div>
    <a asp-action="Edit" asp-route-id="@Model.Item1.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>